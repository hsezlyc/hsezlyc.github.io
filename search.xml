<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>test2</title>
      <link href="/2025/01/20/test2/"/>
      <url>/2025/01/20/test2/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>test1</title>
      <link href="/2025/01/20/test1/"/>
      <url>/2025/01/20/test1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文件管理系统</title>
      <link href="/2025/01/19/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2025/01/19/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="文件管理系统"><a href="#文件管理系统" class="headerlink" title="文件管理系统"></a>文件管理系统</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">void cp(char *source,char *target)&#123;</span><br><span class="line">    char x[100]=&quot;\0&quot;;</span><br><span class="line">    strcat(x,&quot;cp &quot;);</span><br><span class="line">    strcat(x,source);</span><br><span class="line">    strcat(x,&quot; &quot;);</span><br><span class="line">    strcat(x,target);</span><br><span class="line">    if(system(x)!=0)&#123;</span><br><span class="line">        printf(&quot;复制文件时出错\n&quot;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        printf(&quot;复制文件成功\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void rm(char *filename)&#123;</span><br><span class="line">    char x[100]=&quot;\0&quot;;</span><br><span class="line">    strcat(x,&quot;rm &quot;);</span><br><span class="line">    strcat(x,filename);</span><br><span class="line">    if(system(x)!=0)&#123;</span><br><span class="line">        printf(&quot;删除文件时出错\n&quot;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        printf(&quot;删除文件成功\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void compress(char *file,char *compressed)&#123;</span><br><span class="line">    char x[100]=&quot;\0&quot;;</span><br><span class="line">    strcat(x,&quot;tar -czvf &quot;);</span><br><span class="line">    strcat(x,compressed);</span><br><span class="line">    strcat(x,&quot; &quot;);</span><br><span class="line">    strcat(x,file);</span><br><span class="line">    if(system(x)!=0)&#123;</span><br><span class="line">        printf(&quot;压缩文件时出错\n&quot;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        printf(&quot;压缩文件成功\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void decompress(char *compressed,char *file)&#123;</span><br><span class="line">    char x[100]=&quot;\0&quot;;</span><br><span class="line">    strcat(x,&quot;tar -xzvf &quot;);</span><br><span class="line">    strcat(x,compressed);</span><br><span class="line">    strcat(x,&quot; &quot;);</span><br><span class="line">    strcat(x,file);</span><br><span class="line">    if(system(x)!=0)&#123;</span><br><span class="line">        printf(&quot;解压文件时出错\n&quot;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        printf(&quot;解压文件成功\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    char command[100]=&quot;\0&quot;;</span><br><span class="line"></span><br><span class="line">    printf(&quot;Please input your command:\n&quot;);</span><br><span class="line">    printf(&quot;1. COPY: cp &lt;source file&gt; &lt;target file&gt;\n&quot;);</span><br><span class="line">    printf(&quot;2. DELETE: rm &lt;filename&gt;\n&quot;);</span><br><span class="line">    printf(&quot;3. COMPRESS: compress &lt;filename&gt; &lt;compressed package name&gt;\n&quot;);</span><br><span class="line">    printf(&quot;4. DECOMPRESS: decompress &lt;compressed package name&gt; &lt;target directory&gt;\n&quot;);</span><br><span class="line">    printf(&quot;5. EXIT: exit\n&quot;);</span><br><span class="line">    printf(&quot;Please input your command:)\n&quot;);</span><br><span class="line"></span><br><span class="line">    while(1)&#123;</span><br><span class="line">        scanf(&quot;%s&quot;,command);</span><br><span class="line">        if(strcmp(command,&quot;exit&quot;)==0)&#123;</span><br><span class="line">            break;</span><br><span class="line">        &#125;else if(strcmp(command,&quot;cp&quot;)==0)&#123;</span><br><span class="line">            char source[100],target[100];</span><br><span class="line">            scanf(&quot;%s %s&quot;,source,target);</span><br><span class="line">            cp(source,target);</span><br><span class="line">        &#125;else if(strcmp(command,&quot;rm&quot;)==0)&#123;</span><br><span class="line">            char filename[100];</span><br><span class="line">            scanf(&quot;%s&quot;,filename);</span><br><span class="line">            rm(filename);</span><br><span class="line">        &#125;else if(strcmp(command,&quot;compress&quot;)==0)&#123;</span><br><span class="line">            char file[100],compressed[100];</span><br><span class="line">            scanf(&quot;%s %s&quot;,file,compressed);</span><br><span class="line">            compress(file,compressed);</span><br><span class="line">        &#125;else if(strcmp(command,&quot;decompress&quot;)==0)&#123;</span><br><span class="line">            char compressed[100],file[100];</span><br><span class="line">            scanf(&quot;%s %s&quot;,compressed,file);</span><br><span class="line">            decompress(compressed,file);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            printf(&quot;Error Command\n&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
          <category> 大作业 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>笔记</title>
      <link href="/2025/01/19/note/"/>
      <url>/2025/01/19/note/</url>
      
        <content type="html"><![CDATA[<h1 id="Git学习笔记"><a href="#Git学习笔记" class="headerlink" title="Git学习笔记"></a>Git学习笔记</h1><h2 id="（一）基本操作"><a href="#（一）基本操作" class="headerlink" title="（一）基本操作"></a>（一）基本操作</h2><h3 id="1-初始化仓库"><a href="#1-初始化仓库" class="headerlink" title="1. 初始化仓库"></a>1. 初始化仓库</h3><p>在项目目录下执行 <code>git init</code> 命令，会在当前目录下创建一个 <code>.git</code> 子目录，该目录包含了 Git 仓库的所有必要文件，如对象数据库、引用等，标志着 Git 仓库的初始化完成。</p><h3 id="2-添加文件到暂存区"><a href="#2-添加文件到暂存区" class="headerlink" title="2. 添加文件到暂存区"></a>2. 添加文件到暂存区</h3><p>使用 <code>git add &lt;file&gt;</code> 命令将文件添加到暂存区（Stage）。暂存区是 Git 工作流程中的一个中间区域，用于存放即将提交到仓库的文件更改。</p><h3 id="3-提交更改到仓库"><a href="#3-提交更改到仓库" class="headerlink" title="3. 提交更改到仓库"></a>3. 提交更改到仓库</h3><p>执行 <code>git commit -m &quot;commit message&quot;</code> 命令将暂存区的更改提交到本地仓库。其中，“commit message”是对本次提交的描述，清晰的提交信息有助于团队成员了解代码更改的内容和目的。</p><h3 id="4-查看状态"><a href="#4-查看状态" class="headerlink" title="4. 查看状态"></a>4. 查看状态</h3><p><code>git status</code> 命令用于查看当前工作目录和暂存区的状态，包括哪些文件被修改、哪些文件已添加到暂存区、哪些文件未被跟踪等。</p><h3 id="5-查看提交历史"><a href="#5-查看提交历史" class="headerlink" title="5. 查看提交历史"></a>5. 查看提交历史</h3><p><code>git log</code> 命令用于查看项目的提交历史记录，包括提交的作者、日期、提交信息等。通过提交历史，可以了解项目的演进过程，方便回溯和查找特定的代码更改。</p><h2 id="（二）时光机穿梭"><a href="#（二）时光机穿梭" class="headerlink" title="（二）时光机穿梭"></a>（二）时光机穿梭</h2><h3 id="1-查看提交历史"><a href="#1-查看提交历史" class="headerlink" title="1.查看提交历史"></a>1.查看提交历史</h3><p>在进行版本回退之前，需要先查看提交历史，以确定要回退到哪个版本。使用 <code>git log</code> 命令可以查看从最近到最远的提交日志，包括 commit id、提交人、日期等信息。如果输出信息太多，可以加上 <code>--pretty=oneline</code> 参数，使查询的版本排版更整洁，易于观看。</p><h3 id="2-回退到上一个版本"><a href="#2-回退到上一个版本" class="headerlink" title="2.回退到上一个版本"></a>2.回退到上一个版本</h3><p>如果要回退到上一个版本，可以使用 <code>git reset --hard HEAD^</code> 命令。其中，<code>HEAD^</code> 表示上一个版本，上上一个版本就是<code>HEAD^^</code>，当然往上100个版本写100个<code>^</code>比较容易数不过来，所以写成<code>HEAD~100</code>。</p><h3 id="3-回退到指定版本"><a href="#3-回退到指定版本" class="headerlink" title="3.回退到指定版本"></a>3.回退到指定版本</h3><p>如果要回退到指定的版本，可以使用 <code>git reset --hard commit_id</code> 命令。其中，<code>commit_id</code> 是要回退到的版本的 commit id。</p><h3 id="4-查看命令历史"><a href="#4-查看命令历史" class="headerlink" title="4.查看命令历史"></a>4.查看命令历史</h3><p>如果回退后想恢复到新版本，但忘记了新版本的 commit id，可以使用 <code>git reflog</code> 命令查看命令历史。<code>git reflog</code> 会显示每一次命令的版本相关信息，包括 commit id、提交人、日期等，即使被回退放弃过的版本相关信息也会显示。</p><h2 id="（三）远程仓库"><a href="#（三）远程仓库" class="headerlink" title="（三）远程仓库"></a>（三）远程仓库</h2><h4 id="1-添加远程仓库"><a href="#1-添加远程仓库" class="headerlink" title="1. 添加远程仓库"></a>1. 添加远程仓库</h4><p>执行 <code>git remote add &lt;remote-name&gt; &lt;url&gt;</code> 命令添加一个远程仓库。远程仓库通常位于服务器上，用于团队成员之间的代码共享和协作。</p><h4 id="2-从远程仓库克隆"><a href="#2-从远程仓库克隆" class="headerlink" title="2. 从远程仓库克隆"></a>2. 从远程仓库克隆</h4><p>使用 <code>git clone &lt;url&gt;</code> 命令可以从远程仓库克隆一个完整的本地副本。克隆操作会创建一个新的本地仓库，并将远程仓库中的所有文件、分支、提交历史等信息都复制到本地。</p><h4 id="3-推送代码到远程仓库"><a href="#3-推送代码到远程仓库" class="headerlink" title="3. 推送代码到远程仓库"></a>3. 推送代码到远程仓库</h4><p>执行 <code>git push</code> 命令将本地分支的更改推送到远程仓库。这样，其他团队成员就可以获取到最新的代码更改。</p><h2 id="（四）分支管理"><a href="#（四）分支管理" class="headerlink" title="（四）分支管理"></a>（四）分支管理</h2><h3 id="1-创建分支"><a href="#1-创建分支" class="headerlink" title="1. 创建分支"></a>1. 创建分支</h3><p>使用 <code>git branch &lt;branch-name&gt;</code> 命令创建一个新的分支。分支是 Git 中用于并行开发的重要功能，不同的分支可以独立进行开发，互不影响。</p><p>执行 <code>git checkout &lt;branch-name&gt;</code> 命令切换到指定的分支。切换分支后，工作目录中的文件会相应地更新为该分支的最新版本。</p><p>当一个分支的开发完成后，可以使用 <code>git merge &lt;branch-name&gt;</code> 命令将其合并回主分支或其他目标分支。合并操作会将分支上的更改整合到目标分支中，实现代码的融合。</p><h3 id="2-切换分支"><a href="#2-切换分支" class="headerlink" title="2. 切换分支"></a>2. 切换分支</h3><p>执行 <code>git checkout &lt;branch-name&gt;</code>或 <code>git switch &lt;branch-name&gt;</code>命令切换到指定的分支。切换分支后，工作目录中的文件会相应地更新为该分支的最新版本。</p><h3 id="3-合并分支"><a href="#3-合并分支" class="headerlink" title="3. 合并分支"></a>3. 合并分支</h3><p>当一个分支的开发完成后，可以使用 <code>git merge &lt;branch-name&gt;</code> 命令将其合并回主分支或其他目标分支。合并操作会将分支上的更改整合到目标分支中，实现代码的融合。</p><h3 id="4-删除分支"><a href="#4-删除分支" class="headerlink" title="4. 删除分支"></a>4. 删除分支</h3><p>使用 <code>git branch -d &lt;branch-name&gt;</code> 命令删除已经合并过的分支，或者使用 <code>git branch -D &lt;branch-name&gt;</code> 强制删除未合并的分支。删除分支后，该分支上的代码更改将不再单独存在，但已经合并到其他分支的更改仍然保留。</p><p>使用 <code>git pull &lt;remote-name&gt; &lt;branch-name&gt;</code> 命令从远程仓库拉取代码并合并到本地分支。当远程仓库有新的更改时，通过拉取操作可以将这些更改同步到本地，保持本地代码与远程仓库的一致性。</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/01/19/hello-world/"/>
      <url>/2025/01/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }/* 日间模式不生效 */[data-theme="light"] #site-name,[data-theme="light"] #site-title,[data-theme="light"] #site-subtitle,[data-theme="light"] #post-info {  animation: none;}/* 夜间模式生效 */[data-theme="dark"] #site-name,[data-theme="dark"] #site-title {  animation: light_15px 10s linear infinite;}[data-theme="dark"] #site-subtitle {  animation: light_10px 10s linear infinite;}[data-theme="dark"] #post-info {  animation: light_5px 10s linear infinite;}/* 关键帧描述 */@keyframes light_15px {  0% {    text-shadow: #5636ed 0 0 15px;  }  12.5% {    text-shadow: #11ee5e 0 0 15px;  }  25% {    text-shadow: #f14747 0 0 15px;  }  37.5% {    text-shadow: #f1a247 0 0 15px;  }  50% {    text-shadow: #f1ee47 0 0 15px;  }  50% {    text-shadow: #b347f1 0 0 15px;  }  62.5% {    text-shadow: #002afa 0 0 15px;  }  75% {    text-shadow: #ed709b 0 0 15px;  }  87.5% {    text-shadow: #39c5bb 0 0 15px;  }  100% {    text-shadow: #5636ed 0 0 15px;  }}@keyframes light_10px {  0% {    text-shadow: #5636ed 0 0 10px;  }  12.5% {    text-shadow: #11ee5e 0 0 10px;  }  25% {    text-shadow: #f14747 0 0 10px;  }  37.5% {    text-shadow: #f1a247 0 0 10px;  }  50% {    text-shadow: #f1ee47 0 0 10px;  }  50% {    text-shadow: #b347f1 0 0 10px;  }  62.5% {    text-shadow: #002afa 0 0 10px;  }  75% {    text-shadow: #ed709b 0 0 10px;  }  87.5% {    text-shadow: #39c5bb 0 0 10px;  }  100% {    text-shadow: #5636ed 0 0 10px;  }}@keyframes light_5px {  0% {    text-shadow: #5636ed 0 0 5px;  }  12.5% {    text-shadow: #11ee5e 0 0 5px;  }  25% {    text-shadow: #f14747 0 0 5px;  }  37.5% {    text-shadow: #f1a247 0 0 15px;  }  50% {    text-shadow: #f1ee47 0 0 5px;  }  50% {    text-shadow: #b347f1 0 0 5px;  }  62.5% {    text-shadow: #002afa 0 0 5px;  }  75% {    text-shadow: #ed709b 0 0 5px;  }  87.5% {    text-shadow: #39c5bb 0 0 5px;  }  100% {    text-shadow: #5636ed 0 0 5px;  }}/* 侧边栏个人信息卡片动态渐变色 */#aside-content > .card-widget.card-info {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@-moz-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}/* 黑夜模式适配 */[data-theme="dark"] #aside-content > .card-widget.card-info {  background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content > .card-widget.card-info > #card-info-btn {  background-color: #3eb8be;  border-radius: 8px;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/runtime.css"/>
      <url>/css/runtime.css</url>
      
        <content type="html"><![CDATA[/*电子钟字体*/@font-face {  font-family: 'UnidreamLED';  src: url("https://cdn.jsdelivr.net/npm/akilar-candyassets/fonts/UnidreamLED.ttf");  font-display: swap;}div#runtime {  width: 180px;  margin: auto;  color: #fff;  padding-inline: 5px;  border-radius: 10px;  background-color: rgba(0,0,0,0.7);  font-family: 'UnidreamLED';}[data-theme="dark"] div#runtime {  color: #28b4c8;  box-shadow: 0 0 5px rgba(28,69,218,0.71);  animation: flashlight 1s linear infinite alternate;}/*悬停显示徽标提示语*/a.github-badge:hover:before {  position: fixed;  width: fit-content;  margin: auto;  left: 0;  right: 0;  top: 10%;  border-radius: 10px;  text-align: center;  z-index: 100;  content: attr(data-title);  font-size: 20px;  color: #fff;  padding: 10px;  background-color: var(--text-bg-hover);}[data-theme=dark] a.github-badge:hover:before {  background-color: rgba(18,18,18,0.8);}@-moz-keyframes flashlight {  from {    box-shadow: 0 0 5px #1478d2;  }  to {    box-shadow: 0 0 2px #1478d2;  }}@-webkit-keyframes flashlight {  from {    box-shadow: 0 0 5px #1478d2;  }  to {    box-shadow: 0 0 2px #1478d2;  }}@-o-keyframes flashlight {  from {    box-shadow: 0 0 5px #1478d2;  }  to {    box-shadow: 0 0 2px #1478d2;  }}@keyframes flashlight {  from {    box-shadow: 0 0 5px #1478d2;  }  to {    box-shadow: 0 0 2px #1478d2;  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[setInterval(() => {  let create_time = Math.round(new Date('2025-01-19 16:00:00').getTime() / 1000); //在此行修改建站时间  let timestamp = Math.round((new Date().getTime()) / 1000);  let second = timestamp - create_time;  let time = new Array(0, 0, 0, 0, 0);  var nol = function(h){    return h>9?h:'0'+h;  }  if (second >= 365 * 24 * 3600) {    time[0] = parseInt(second / (365 * 24 * 3600));    second %= 365 * 24 * 3600;  }  if (second >= 24 * 3600) {    time[1] = parseInt(second / (24 * 3600));    second %= 24 * 3600;  }  if (second >= 3600) {    time[2] = nol(parseInt(second / 3600));    second %= 3600;  }  if (second >= 60) {    time[3] = nol(parseInt(second / 60));    second %= 60;  }  if (second > 0) {    time[4] = nol(second);  }  if ((Number(time[2])<22) && (Number(time[2])>7)){    currentTimeHtml ="<img class='boardsign' src='https://img.shields.io/badge/糖果屋-营业中-6adea8?style=social&logo=cakephp' title='距离百年老店也就差不到一百年~'><div id='runtime'>" + time[0] + ' YEAR ' + time[1] + ' DAYS ' + time[2] + ' : ' + time[3] + ' : ' + time[4] + '</div>';  }  else{    currentTimeHtml ="<img class='boardsign' src='https://img.shields.io/badge/糖果屋-打烊了-6adea8?style=social&logo=coffeescript' title='这个点了应该去睡觉啦，熬夜对身体不好哦'><div id='runtime'>" + time[0] + ' YEAR ' + time[1] + ' DAYS ' + time[2] + ' : ' + time[3] + ' : ' + time[4] + '</div>';  }  document.getElementById("workboard").innerHTML = currentTimeHtml;}, 1000);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
